// Code generated by MockGen. DO NOT EDIT.
// Source: rest.go

// Package mock_rest is a generated GoMock package.
package mock_rest

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockrestHandlerClient is a mock of restHandlerClient interface.
type MockrestHandlerClient struct {
	ctrl     *gomock.Controller
	recorder *MockrestHandlerClientMockRecorder
}

// MockrestHandlerClientMockRecorder is the mock recorder for MockrestHandlerClient.
type MockrestHandlerClientMockRecorder struct {
	mock *MockrestHandlerClient
}

// NewMockrestHandlerClient creates a new mock instance.
func NewMockrestHandlerClient(ctrl *gomock.Controller) *MockrestHandlerClient {
	mock := &MockrestHandlerClient{ctrl: ctrl}
	mock.recorder = &MockrestHandlerClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockrestHandlerClient) EXPECT() *MockrestHandlerClientMockRecorder {
	return m.recorder
}

// AddItemHandler mocks base method.
func (m *MockrestHandlerClient) AddItemHandler(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddItemHandler", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddItemHandler indicates an expected call of AddItemHandler.
func (mr *MockrestHandlerClientMockRecorder) AddItemHandler(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddItemHandler", reflect.TypeOf((*MockrestHandlerClient)(nil).AddItemHandler), c)
}

// AddVasItemToItemHandler mocks base method.
func (m *MockrestHandlerClient) AddVasItemToItemHandler(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddVasItemToItemHandler", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddVasItemToItemHandler indicates an expected call of AddVasItemToItemHandler.
func (mr *MockrestHandlerClientMockRecorder) AddVasItemToItemHandler(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddVasItemToItemHandler", reflect.TypeOf((*MockrestHandlerClient)(nil).AddVasItemToItemHandler), c)
}

// DisplayCartHandler mocks base method.
func (m *MockrestHandlerClient) DisplayCartHandler(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisplayCartHandler", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// DisplayCartHandler indicates an expected call of DisplayCartHandler.
func (mr *MockrestHandlerClientMockRecorder) DisplayCartHandler(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisplayCartHandler", reflect.TypeOf((*MockrestHandlerClient)(nil).DisplayCartHandler), c)
}

// HealthCheckHandler mocks base method.
func (m *MockrestHandlerClient) HealthCheckHandler(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HealthCheckHandler", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// HealthCheckHandler indicates an expected call of HealthCheckHandler.
func (mr *MockrestHandlerClientMockRecorder) HealthCheckHandler(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HealthCheckHandler", reflect.TypeOf((*MockrestHandlerClient)(nil).HealthCheckHandler), c)
}

// RemoveItemHandler mocks base method.
func (m *MockrestHandlerClient) RemoveItemHandler(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveItemHandler", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveItemHandler indicates an expected call of RemoveItemHandler.
func (mr *MockrestHandlerClientMockRecorder) RemoveItemHandler(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveItemHandler", reflect.TypeOf((*MockrestHandlerClient)(nil).RemoveItemHandler), c)
}

// ResetCartHandler mocks base method.
func (m *MockrestHandlerClient) ResetCartHandler(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResetCartHandler", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// ResetCartHandler indicates an expected call of ResetCartHandler.
func (mr *MockrestHandlerClientMockRecorder) ResetCartHandler(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResetCartHandler", reflect.TypeOf((*MockrestHandlerClient)(nil).ResetCartHandler), c)
}
